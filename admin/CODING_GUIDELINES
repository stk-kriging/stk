This document gather various recommendations for writing code to be included in
the STK.


--- CG#01: Checking the value of nargin ----------------------------------------

Older versions of Matlab and Octave (e.g., Matlab R2007a or Octave 3.4.3) have
nargchk but not narginchk available. But the syntax of nargchk is ugly, and the
function is marked as obsolete in recent versions of Matlab (e.g., R2012a), so
we recommend using neither nargchk nor narginchk.

Testing for nargin being too small is usually a waste of time, since an error
will be issued when trying to use the absent argument.

Testing for nargin being too large is not necessary in Matlab, since this
automatically generates an error, but unfortunately the Octave developpers have
made a different choice; see:

http://octave.1599824.n4.nabble.com/Too-many-arguments-td1637206.html
https://www.gnu.org/software/octave/doc/interpreter/Defining-Functions.html
http://octave.1599824.n4.nabble.com/Why-does-Octave-ignore-additional-input-arguments-td4674701.html

The current recommendation for checking the value of nargin in STK is as follows:

 * don't check for nargin being too small, unless there is a specific reason to
   do so (typically, to provide a more readable error message),

 * check for nargin being too large this way:

   if nargin > 2,
     stk_error ('Too many input arguments.', 'TooManyInputArgs');
   end


--- CG#02: Nested functions ----------------------------------------------------

The support for nested function was introduced in Octave 3.8:

https://www.gnu.org/software/octave/NEWS-3.8.html

Until STK's requirement is raised to Octave 3.8, don't use nested functions.


--- CG#03: MEX-file in class directories ---------------------------------------

Octave 3.6.4 does allow to manipulate instances of user-defined classes
through MEX-files. Octave 3.8.x probably won't. So don't think of it.


--- CG#04: Overloading isequal -------------------------------------------------

Overloading the base function 'isequal' is usually not required for user-
defined classes. Some old releases of Octave (e.g., 3.2.4), however, have a
bug that make isequal (x, y) return false when x and y are objects, even if
they are equal. Therefore, as long as we want to support those releases, we
have have to overload isequal (see, e.g., @stk_dataframe).


--- CG#05: Calling display () on structures ------------------------------------

Octave fails when display is called on structures that contain strings
containing '<class ' or objects that don't overload display (and
therefore display as '<class ...' by default.

https://savannah.gnu.org/bugs/index.php?49753

As a workaround, we should avoid calling display on such structures
(espacially, on model structures that contain an stk_lm_* object).


--- CG#06: Cell arrays of handles ----------------------------------------------

Octave 3.6.2 fails to parse this: C = {@sin @cos};

As a work-around, always use a comma-separated list: C = {@sin, @cos};


--- CG#07: Ignoring output arguments -------------------------------------------

Octave supports the use of ~, to ignore unwanted output arguments, since
its 3.4.0 release:

https://www.gnu.org/software/octave/NEWS-3.4.html

Don't use this syntax as long as Octave 3.2.x is supported in STK.


--- CG#08: Using ismatrix ------------------------------------------------------

The ismatrix function has only been introduced in Matlab R2010b.

Octave has had ismatrix for a long time, but the ismatrix function
that is present in Octave 3.8 and before is not compatible with the
one introduced in Matlab R2010b.

The simplest solution is to completely avoid ismatrix and use instead:

    is_matrix = (ndims (x) == 2);

or, to specifically test for a numeric matrix:

    is_matrix = (isnumeric (x)) && (ndims (x) == 2);
