This document gather various recommendations for writing code to be included in
the STK.


--- CG#01: Checking the value of nargin ----------------------------------------

Older versions of Matlab and Octave (e.g., Matlab R2007a or Octave 3.4.3) have
nargchk but not narginchk available. But the syntax of nargchk is ugly, and the
function is marked as obsolete in recent versions of Matlab (e.g., R2012a), so
we recommend using neither nargchk nor narginchk.

Testing for nargin being too small is usually a waste of time, since an error
will be issued when trying to use the absent argument.

Testing for nargin being too large is not necessary in Matlab, since this
automatically generates an error, but unfortunately the Octave developpers have
made a different choice; see:

http://octave.1599824.n4.nabble.com/Too-many-arguments-td1637206.html
https://www.gnu.org/software/octave/doc/interpreter/Defining-Functions.html
http://octave.1599824.n4.nabble.com/Why-does-Octave-ignore-additional-input-arguments-td4674701.html

The current recommendation for checking the value of nargin in STK is as follows:

 * don't check for nargin being too small, unless there is a particular reason to
   do so (typically, to provide a more readable error message),

 * don't check for nargin being too large in situations where Matlab would normally
   raise an error automatically (i.e., when a function that accepts at most k input
   arguments is called with nargin > k)... again, unless there is a particular
   reason to do so.


--- CG#02: Nested functions ----------------------------------------------------

The support for nested function was introduced in Octave 3.8:

https://www.gnu.org/software/octave/NEWS-3.8.html

Until STK's requirement is raised to Octave 3.8, don't use nested functions.


--- CG#03: MEX-file in class directories ---------------------------------------

Octave 3.6.4 does allow to manipulate instances of user-defined classes
through MEX-files. Octave 3.8.x probably won't. So don't think of it.


--- CG#05: Calling display () on structures ------------------------------------

Octave fails when display is called on structures that contain strings
containing '<class ' or objects that don't overload display (and
therefore display as '<class ...' by default.

https://savannah.gnu.org/bugs/index.php?49753

As a workaround, we should avoid calling display on such structures
(espacially, on model structures that contain an stk_lm_* object).


--- CG#07: Ignoring output arguments -------------------------------------------

The ~ syntax to ignore unwanted output arguments has been available in Matlab
since release R2009b (September 2009) and in Octave since release 3.4.0 (June
2011).

https://www.gnu.org/software/octave/NEWS-3.4.html

https://en.wikipedia.org/wiki/MATLAB#Release_history

Don't use this syntax as long as Matlab R2007a--R2009a are supported in STK.


--- CG#08: Using ismatrix ------------------------------------------------------

The ismatrix function has only been introduced in Matlab R2010b.

Octave has had ismatrix for a long time, but the ismatrix function
that is present in Octave 3.8 and before is not compatible with the
one introduced in Matlab R2010b.

The simplest solution is to completely avoid ismatrix and use instead:

    is_matrix = (ndims (x) == 2);

or, to specifically test for a numeric matrix:

    is_matrix = (isnumeric (x)) && (ndims (x) == 2);


--- CG#09: Use erfcinv instead of norminv --------------------------------------

To avoid a dependency on Matlab's stats toolbox, try to use erfcinv
directly when norminv fails.  This should cover all cases:

try
    crit.quantile_value = norminv (order);
    % works in Octave and in Matlab if the stats toolbox is available
catch
    % works in Matlab (introduced prior to 2006a according to the online doc)
    crit.quantile_value = - sqrt (2) * erfcinv (2 * order);  % CG#09
end

Note that the second syntax only works in Octave 3.8 and later.


--- CG#10: Disable TeX interpreter for variables names -------------------------

Variables names (typically, column names in @stk_dataframe objects) often
contain underscores.  It is thus preferable to disable the TeX interpreter
when calling stk_xlabel / stk_ylabel / stk_zlabel to display such variable
names, as follows:

stk_xlabel (h_axis, xlab, 'interpreter', 'none');
